!function(){"use strict";var e=class{constructor(e,t,s,n,r){let{name:o,link:i,_id:a,isLiked:l}=e;this._name=o,this._link=i,this._handleImageClick=s,this._cardSelector=t,this._id=a,this._isLiked=l,this._handleTrashClick=n,this._handleLikeClick=r}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._cardElement.querySelector(".card__button-like").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__button-remove").addEventListener("click",(()=>{this._handleRemoveCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__button-like").classList.toggle("card__button-like_active")}_handleRemoveCard(){this._cardElement.remove(),this._cardElement=null}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card__list-item").cloneNode(!0);const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=`Image of ${this._name}`,this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._cardElement}};class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._errorMessageEl=e.errorMessageEl,this._formElement=t,this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t?(t.textContent=e.validationMessage,t.classList.add(this._errorClass)):console.warn(`Error element for ${e.id} not found.`)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t?t.textContent="":console.warn(`Error element for ${e.id} not found.`)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e,t){e.validity.valid?this._hideInputError(e,t):this._showInputError(e)}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e,this._formElement),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._open=this.open.bind(this),this._close=this.close.bind(this),this._handleEscClose=this.handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()}))}}var n=class extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}close(){this._popupForm.reset(),super.close()}_getInputValues(){return this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{this._handleFormSubmit(this._getInputValues())}))}};class r{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const o=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._headers}}).then((e=>this._checkResponse(e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authToken}}).then((e=>this._checkResponse(e)))}createCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:t,link:s}),headers:this._headers}).then(this._checkResponse)}updateEditProfile(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:t,about:s}),headers:this._headers}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",body:JSON.stringify({avatar:e}),headers:this._headers}).then(this._checkResponse)}getAllData(){return Promise.all([this._getUserInfo(),this._getInitialCards()])}}({baseUrl:"https://example.com",headers:"your-auth-token"}),i=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._aboutElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._aboutElement.textContent=s}}({nameSelector:".profile__name",jobSelector:".profile__job"}),a=new n({popupSelector:".popup_type_edit-profile",formSubmitHandler:C}),l=new n({popupSelector:".popup_type_add-card",formSubmitHandler:q}),c=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector(".modal__image"),this._popupTitle=this._popupElement.querySelector(".modal__title")}open(e){let{name:t,link:s}=e;this._popupImage.src=s,this._popupImage.alt=t,this._popupTitle.textContent=t,super.open()}}(".popup_type_image"),d=document.querySelector(".profile__add-button"),u=document.querySelector(".profile__edit-button"),h=document.querySelector(".popup_type_edit-profile .popup__close-button"),_=document.querySelector(".popup_type_add-card .popup__close-button"),p=document.querySelector(".popup_type_image .popup__close-button"),m=document.querySelector(".popup_type_edit-profile"),E=document.querySelector(".popup_type_add-card"),f=document.querySelector(".popup_type_image"),S=document.querySelector(".popup_type_edit-profile .popup__input_type_name"),y=document.querySelector(".popup_type_edit-profile .popup__input_type_description"),b=document.querySelector("#add-card-form"),g=document.querySelector("#edit-card-form"),v=new t(config,b),k=new t(config,g);function L(t){const s=new e({data:t,handleCardClick:()=>{c.open(t.name,t.link)},handleLikeClick:()=>{const e=s.isLiked();o.changeLikeCardStatus(t._id,!e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{console.log(e)}))},handleTrashClick:()=>{const e=t._id,n=new PopupWithConfirm({popupSelector:".popup_type_confirm-delete",formSubmitHandler:()=>{o.deleteCard(e).then((()=>{s.deleteCard(),n.close()})).catch((e=>{console.log(e)}))}});n.open()}},"#card-template");return s.generateCard()}function C(e){a.setLoading(!0),o.editUserInfo(e).then((e=>{i.setUserInfo(e),a.close()})).catch((e=>{console.log(e)})).finally((()=>{a.setLoading(!1)}))}function q(e){l.setLoading(!0),o.addCard(e).then((e=>{const t=L(e);document.querySelector(".cards__list").prepend(t),l.close()})).catch((e=>{console.log(e)})).finally((()=>{l.setLoading(!1)}))}function I(e){if(e.target===e.currentTarget){const t=e.target.querySelector(".popup");t&&t.classList.remove("popup_opened")}}o.getAllData().then((e=>{let[t,s]=e;i.setUserInfo(t);const n=new r({items:s,renderer:e=>{const t=L(e);n.addItem(t)}},".cards__list");n.renderItems()})).catch((e=>{console.log(e)})),u.addEventListener("click",(()=>{const e=i.getUserInfo();S.value=e.name,y.value=e.job,a.open()})),h.addEventListener("click",(()=>{a.close()})),p.addEventListener("click",(()=>{c.close()})),m.addEventListener("mousedown",I),E.addEventListener("mousedown",I),f.addEventListener("mousedown",I),d.addEventListener("click",(()=>{v.resetValidation(),v.toggleButtonState(),l.open()})),_.addEventListener("click",(()=>l.close())),g.addEventListener("submit",(e=>{e.preventDefault(),k.setLoading(!0),k.disableSubmitButton(),C(new FormData(e.target))})),b.addEventListener("submit",(e=>{e.preventDefault(),v.setLoading(!0),v.disableSubmitButton(),q(new FormData(e.target))})),v.enableValidation(),k.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,